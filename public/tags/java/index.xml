<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Blog DangnoHat</title>
    <link>http://localhost:1313/dangcode-blog/tags/java/</link>
    <description>Recent content in Java on Blog DangnoHat</description>
    <generator>Hugo</generator>
    <language>vi</language>
    <lastBuildDate>Wed, 22 Oct 2025 09:00:00 +0700</lastBuildDate>
    <atom:link href="http://localhost:1313/dangcode-blog/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mối liên hệ giữa Java và Mạng máy tính – Từ lịch sử Internet đến lập trình mạng hiện đại</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/00/java_network/</link>
      <pubDate>Tue, 21 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/00/java_network/</guid>
      <description>&lt;div style=&#34;font-size: 1.3em; line-height: 1.8; margin-bottom: 30px; padding: 0 10px;&#34;&gt;&#xA;    &lt;p&gt;&#xA;        Java và mạng máy tính là **hai nền tảng song hành trong hành trình phát triển của công nghệ hiện đại**. Nếu Internet là “hệ thần kinh” toàn cầu, thì Java chính là “ngôn ngữ” giúp máy móc giao tiếp, trao đổi thông tin qua hệ thần kinh đó. Mối liên hệ này không phải ngẫu nhiên, mà đã được xây dựng từ những ngày đầu bùng nổ của World Wide Web. &lt;/p&gt;</description>
    </item>
    <item>
      <title>Giới thiệu về Java – Lịch sử, đặc điểm và ứng dụng</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/01/10-java-intro/</link>
      <pubDate>Mon, 20 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/01/10-java-intro/</guid>
      <description>&lt;div style=&#34;max-width: 950px; margin: 0 auto; padding: 0 10px;&#34;&gt;&#xA;   &lt;p style=&#34;font-size: 1.3em; line-height: 1.8; margin-bottom: 30px;&#34;&gt;&#xA;        Java là một trong những **ngôn ngữ lập trình phổ biến và mạnh mẽ nhất** trên thế giới. Nó không chỉ là nền tảng của nhiều ứng dụng lớn mà còn là khởi đầu vững chắc cho bất kỳ ai muốn theo đuổi lập trình chuyên nghiệp. Trong bài viết này, mình sẽ giới thiệu về **lịch sử ra đời, đặc điểm nổi bật** làm nên sức mạnh của Java, và **ứng dụng thực tế** của nó.&#xA;    &lt;/p&gt;</description>
    </item>
    <item>
      <title>Java cơ bản: Biến, kiểu dữ liệu và hằng số</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/02/11-java-basics/</link>
      <pubDate>Mon, 20 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/02/11-java-basics/</guid>
      <description>&lt;div style=&#34;max-width: 950px; margin: 0 auto; padding: 0 10px;&#34;&gt;&#xA;&lt;p style=&#34;font-size: 1.3em; line-height: 1.8; margin-bottom: 30px;&#34;&gt;&#xA;        Java là ngôn ngữ **có kiểu dữ liệu tĩnh (statically typed)**, nghĩa là bạn phải khai báo rõ ràng kiểu dữ liệu cho mỗi biến trước khi sử dụng. Đây là nền tảng đầu tiên mà mọi lập trình viên Java cần nắm vững. Trong bài viết này, mình sẽ cùng nhau khám phá **biến (variables), kiểu dữ liệu (data types) và hằng số (constants)** trong Java bằng cách giải thích theo phương pháp Feynman!&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Toán tử và biểu thức trong Java</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/03/12-java-operators/</link>
      <pubDate>Mon, 20 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/03/12-java-operators/</guid>
      <description>&lt;div style=&#34;max-width: 950px; margin: 0 auto; padding: 0 10px;&#34;&gt;&#xA;&lt;p style=&#34;font-size: 1.3em; line-height: 1.8; margin-bottom: 30px;&#34;&gt;&#xA;    Toán tử (Operators) là **công cụ xử lý dữ liệu** cơ bản nhất trong lập trình. Chúng cho phép chúng ta thực hiện các phép tính, so sánh giá trị, và kết hợp các điều kiện. Mình học bằng cách giải thích theo Feynman: **“Toán tử = công cụ biến đổi dữ liệu”**. Bài viết này sẽ giúp bạn nắm vững các loại toán tử quan trọng nhất trong Java.&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Câu lệnh điều kiện if/else trong Java</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/04/13-java-ifelse/</link>
      <pubDate>Mon, 20 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/04/13-java-ifelse/</guid>
      <description>Trong lập trình, câu lệnh điều kiện là công cụ giúp chương trình Java ra quyết định dựa trên các tình huống khác nhau. Đây là một trong những khái niệm cơ bản nhưng mạnh mẽ nhất.</description>
    </item>
    <item>
      <title>Vòng lặp trong Java: for, while, do-while</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/05/14-java-loops/</link>
      <pubDate>Mon, 20 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/05/14-java-loops/</guid>
      <description>Vòng lặp (Loops) là tính năng cốt lõi, giúp chương trình của bạn thực hiện một hành động lặp đi lặp lại nhiều lần mà không cần viết lại cùng một đoạn mã. Nó giống như một con robot làm việc lặp lại.</description>
    </item>
    <item>
      <title>Mảng và Collection trong Java</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/06/15-java-array-collection/</link>
      <pubDate>Mon, 20 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/06/15-java-array-collection/</guid>
      <description>Mảng (Array) và Collection là hai công cụ chính giúp bạn &lt;strong&gt;lưu trữ và quản lý nhiều giá trị cùng lúc&lt;/strong&gt; trong Java. Nắm vững hai khái niệm này là chìa khóa để xử lý dữ liệu quy mô lớn hơn một biến đơn lẻ. Mình học bằng phương pháp Feynman.</description>
    </item>
    <item>
      <title>Hàm, Overloading và Parameter Passing trong Java</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/07/16-java-functions/</link>
      <pubDate>Mon, 20 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/07/16-java-functions/</guid>
      <description>Trong lập trình Java, &lt;strong&gt;Hàm (Method)&lt;/strong&gt; là công cụ cốt lõi giúp bạn &lt;strong&gt;tổ chức code thành các khối nhỏ logic, dễ quản lý và tái sử dụng&lt;/strong&gt;. Cùng với &lt;strong&gt;Overloading&lt;/strong&gt; và &lt;strong&gt;Parameter Passing&lt;/strong&gt;, hàm giúp code của chúng ta trở nên mạnh mẽ và linh hoạt hơn rất nhiều.</description>
    </item>
    <item>
      <title>Lập trình hướng đối tượng nâng cao: Class, Inheritance, Polymorphism</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/08/17-java-oop/</link>
      <pubDate>Mon, 20 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/08/17-java-oop/</guid>
      <description>Java là ngôn ngữ &lt;strong&gt;hướng đối tượng (OOP) thuần túy&lt;/strong&gt;. Nắm vững các trụ cột của OOP như &lt;strong&gt;Class, Object, Inheritance (Kế thừa), và Polymorphism (Đa hình)&lt;/strong&gt; là chìa khóa để xây dựng các ứng dụng lớn, có cấu trúc và dễ bảo trì.</description>
    </item>
    <item>
      <title>Exception Handling trong Java</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/09/18-java-exception/</link>
      <pubDate>Mon, 20 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/09/18-java-exception/</guid>
      <description>&lt;div style=&#34;max-width: 950px; margin: 0 auto; padding: 0 10px;&#34;&gt;&#xA;&lt;p style=&#34;font-size: 1.3em; line-height: 1.8; margin-bottom: 30px;&#34;&gt;&#xA;    Trong lập trình Java, **Xử lý ngoại lệ (Exception Handling)** là kỹ thuật cốt lõi giúp bạn **bắt lỗi và duy trì chương trình chạy ổn định** ngay cả khi có sự cố xảy ra. Thay vì bị dừng đột ngột, chương trình có thể &#34;cứu hộ&#34; và tiếp tục công việc.&#xA;&lt;/p&gt;&#xA;&lt;div style=&#34;text-align: center; margin-bottom: 40px;&#34;&gt;&#xA;    &lt;img src=&#34;http://localhost:1313/dangcode-blog/images/exc.png&#34; alt=&#34;Java Exception&#34; style=&#34;max-width: 90%; height: auto; border-radius: 10px; box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);&#34;&gt;&#xA;&lt;/div&gt;&#xA;&lt;div style=&#34;padding: 15px; border-left: 5px solid #ff9800; background-color: #fff8e1; margin: 30px 0; font-size: 1.25em;&#34;&gt;&#xA;    Mình học bằng phương pháp Feynman: &#xA;    &gt; **“Exception = tín hiệu cảnh báo bất ngờ, Catch = đội cứu hộ phản ứng nhanh.”**&#xA;&lt;/div&gt;&#xA;&lt;hr style=&#34;border: 0; height: 1px; background-color: #ddd; margin: 40px 0;&#34;&gt;&#xA;&lt;h2 style=&#34;color: #007bff; border-bottom: 3px solid #e0f7fa; padding-bottom: 10px; margin-top: 50px; font-weight: 700; font-size: 2.0em;&#34;&gt;&#xA;    1. Cấu trúc Try-Catch và Phân loại ngoại lệ&#xA;&lt;/h2&gt;&#xA;&lt;div style=&#34;font-size: 1.25em; line-height: 1.8; margin-bottom: 30px;&#34;&gt;&#xA;    &lt;p&gt;&#xA;        Khối `try` chứa đoạn code có nguy cơ gây lỗi (ngoại lệ). Nếu lỗi xảy ra, khối `try` sẽ ngừng chạy và chương trình chuyển đến khối `catch` phù hợp để xử lý.&#xA;    &lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Input/Output (I/O): Làm việc với Console và File</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/10/19-java-io/</link>
      <pubDate>Mon, 20 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/10/19-java-io/</guid>
      <description>&lt;div style=&#34;max-width: 950px; margin: 0 auto; padding: 0 10px;&#34;&gt;&#xA;  &lt;p style=&#34;font-size: 1.3em; line-height: 1.8; margin-bottom: 30px;&#34;&gt;&#xA;      Java I/O (Input/Output) là hệ thống giúp chương trình của bạn **đọc/ghi dữ liệu từ các nguồn bên ngoài** như file, console, hoặc kết nối mạng. Đây là khả năng giao tiếp cơ bản nhất của mọi ứng dụng.&#xA;  &lt;/p&gt;&#xA;  &lt;div style=&#34;text-align: center; margin-bottom: 40px;&#34;&gt;&#xA;      &lt;img src=&#34;http://localhost:1313/dangcode-blog/images/io-ins.gif&#34; alt=&#34;Java IO&#34; style=&#34;max-width: 90%; height: auto; border-radius: 10px; box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);&#34;&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div style=&#34;padding: 15px; border-left: 5px solid #ff9800; background-color: #fff8e1; margin: 30px 0; font-size: 1.25em;&#34;&gt;&#xA;      Mình học bằng phương pháp Feynman: &#xA;      &gt; **“Input = nhận dữ liệu từ nguồn bên ngoài, Output = trả dữ liệu ra ngoài.”**&#xA;  &lt;/div&gt;&#xA;  &lt;hr style=&#34;border: 0; height: 1px; background-color: #ddd; margin: 40px 0;&#34;&gt;&#xA;  &lt;h2 style=&#34;color: #007bff; border-bottom: 3px solid #e0f7fa; padding-bottom: 10px; margin-top: 50px; font-weight: 700; font-size: 2.0em;&#34;&gt;&#xA;      1. Nhập/Xuất Console và Khái niệm Stream&#xA;  &lt;/h2&gt;&#xA;  &lt;div style=&#34;font-size: 1.25em; line-height: 1.8; margin-bottom: 30px;&#34;&gt;&#xA;      &lt;p&gt;Tất cả I/O trong Java đều dựa trên **Stream (Luồng)**. Stream là một chuỗi dữ liệu mà chương trình có thể đọc từ đó (Input Stream) hoặc ghi vào đó (Output Stream).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tổng kết lý thuyết và cảm nhận cá nhân khi học Java</title>
      <link>http://localhost:1313/dangcode-blog/blog/java/java_summary/</link>
      <pubDate>Wed, 22 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/blog/java/java_summary/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://cdn.pixabay.com/photo/2017/05/10/16/06/java-2306154_1280.png&#34; alt=&#34;Java Language&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;-tổng-kết-lý-thuyết-về-java&#34;&gt;🧠 Tổng kết lý thuyết về Java&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-giới-thiệu-về-java&#34;&gt;1. Giới thiệu về Java&lt;/h3&gt;&#xA;&lt;p&gt;Java là &lt;strong&gt;ngôn ngữ lập trình hướng đối tượng, đa nền tảng&lt;/strong&gt;, được phát triển bởi Sun Microsystems (nay thuộc Oracle).&lt;br&gt;&#xA;Với khẩu hiệu &lt;strong&gt;“Write Once, Run Anywhere”&lt;/strong&gt;, Java có thể chạy trên nhiều hệ điều hành nhờ &lt;strong&gt;JVM (Java Virtual Machine)&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Đặc điểm nổi bật:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Đa nền tảng (Cross-platform)&lt;/li&gt;&#xA;&lt;li&gt;Hướng đối tượng (OOP)&lt;/li&gt;&#xA;&lt;li&gt;Bảo mật, ổn định cao&lt;/li&gt;&#xA;&lt;li&gt;Thư viện phong phú (Java API)&lt;/li&gt;&#xA;&lt;li&gt;Quản lý bộ nhớ tự động (Garbage Collector)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-cấu-trúc-cơ-bản-của-chương-trình-java&#34;&gt;2. Cấu trúc cơ bản của chương trình Java&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Main&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello Java!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;---&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;div style&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text-align:center; background:#f0f8ff; border-left:5px solid #007acc; border-radius:10px; padding:15px; font-size:1.1em;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;🎯&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;strong&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;Chúc những ai đang đọc blog này luôn giữ được niềm đam mê học hỏi, kiên trì và sớm trở thành những lập trình viên Java vững vàng, tự tin bước vào thế giới công nghệ&lt;span style=&#34;color:#f92672&#34;&gt;!&amp;lt;/&lt;/span&gt;strong&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;🚀&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;em&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;—&lt;/span&gt; Đăng Nguyễn Hải&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;em&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Cảm nhận khi học Java</title>
      <link>http://localhost:1313/dangcode-blog/cam_nhan/</link>
      <pubDate>Tue, 21 Oct 2025 09:30:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/cam_nhan/</guid>
      <description>&lt;div style=&#34;max-width: 950px; margin: 0 auto; padding: 0 10px;&#34;&gt;&#xA;&lt;h2 style=&#34;color: #FF5722; border-bottom: 3px solid #FFCCBC; padding-bottom: 10px; margin-top: 50px; font-weight: 800; font-size: 2.2em; text-align: center;&#34;&gt;&#xA;        🌱 Cảm nhận cá nhân về Java&#xA;    &lt;/h2&gt;&#xA;&lt;div style=&#34;padding: 20px; border-left: 5px solid #ffcc00; background-color: #fffde7; margin: 30px 0 40px; border-radius: 5px;&#34;&gt;&#xA;        &lt;blockquote style=&#34;font-style: italic; font-size: 1.4em; color: #333; margin: 0 auto; line-height: 1.6;&#34;&gt;&#xA;            “Learning Java is not just learning a language — it’s learning how to think like a developer.”  &#xA;            &lt;p style=&#34;font-size: 0.9em; margin-top: 5px; color: #555;&#34;&gt;_— Cisco Networking Academy_&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hướng dẫn học Java hiệu quả</title>
      <link>http://localhost:1313/dangcode-blog/huong_dan_java_hieu_qua/</link>
      <pubDate>Tue, 21 Oct 2025 09:00:00 +0700</pubDate>
      <guid>http://localhost:1313/dangcode-blog/huong_dan_java_hieu_qua/</guid>
      <description>&lt;div style=&#34;max-width: 950px; margin: 0 auto; padding: 0 10px;&#34;&gt;&#xA;  &lt;h2 style=&#34;color: #FF5722; border-bottom: 3px solid #FFCCBC; padding-bottom: 10px; margin-top: 50px; font-weight: 800; font-size: 2.2em; text-align: center;&#34;&gt;&#xA;        🧠 Học Java — Hành trình cần cả tư duy và sự kiên nhẫn&#xA;    &lt;/h2&gt;&#xA;    &lt;div style=&#34;font-size: 1.3em; line-height: 1.8; margin-top: 30px; margin-bottom: 40px; text-align: justify;&#34;&gt;&#xA;        &lt;p&gt;&#xA;            Bắt đầu học **Java** có thể khiến nhiều người cảm thấy choáng ngợp — cú pháp dài, khái niệm “class”, “object”, “method” nghe có vẻ khô khan.&#xA;        &lt;/p&gt;</description>
    </item>
  </channel>
</rss>
